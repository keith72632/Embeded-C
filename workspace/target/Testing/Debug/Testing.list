
Testing.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001b4  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800035c  08000364  00010364  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800035c  0800035c  00010364  2**0
                  CONTENTS
  4 .ARM          00000000  0800035c  0800035c  00010364  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800035c  08000364  00010364  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800035c  0800035c  0001035c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000360  08000360  00010360  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010364  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000364  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000364  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010364  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000095d  00000000  00000000  0001038e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001ab  00000000  00000000  00010ceb  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000048  00000000  00000000  00010e98  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000030  00000000  00000000  00010ee0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00001c1f  00000000  00000000  00010f10  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000005e5  00000000  00000000  00012b2f  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00007e0a  00000000  00000000  00013114  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001af1e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000058  00000000  00000000  0001af9c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000344 	.word	0x08000344

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000344 	.word	0x08000344

080001e8 <main>:

#include <stdint.h>
#include <stdio.h>

int main(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b089      	sub	sp, #36	; 0x24
 80001ec:	af00      	add	r7, sp, #0
    uint32_t *pclock = (uint32_t *)0x40023830;
 80001ee:	4b2a      	ldr	r3, [pc, #168]	; (8000298 <main+0xb0>)
 80001f0:	60fb      	str	r3, [r7, #12]
    uint32_t *pGPIODMode = (uint32_t *)0x40020C00;
 80001f2:	4b2a      	ldr	r3, [pc, #168]	; (800029c <main+0xb4>)
 80001f4:	60bb      	str	r3, [r7, #8]
    uint32_t *pSet = (uint32_t *)0x40020C14;
 80001f6:	4b2a      	ldr	r3, [pc, #168]	; (80002a0 <main+0xb8>)
 80001f8:	607b      	str	r3, [r7, #4]

    *pclock |= (1 << 3);
 80001fa:	68fb      	ldr	r3, [r7, #12]
 80001fc:	681b      	ldr	r3, [r3, #0]
 80001fe:	f043 0208 	orr.w	r2, r3, #8
 8000202:	68fb      	ldr	r3, [r7, #12]
 8000204:	601a      	str	r2, [r3, #0]

    while(1){

    	for(uint32_t i = 24, j=12; i <= 30; i += 2, j++){
 8000206:	2318      	movs	r3, #24
 8000208:	61fb      	str	r3, [r7, #28]
 800020a:	230c      	movs	r3, #12
 800020c:	61bb      	str	r3, [r7, #24]
 800020e:	e03f      	b.n	8000290 <main+0xa8>
    		*pGPIODMode &= ~(3 << i);
 8000210:	68bb      	ldr	r3, [r7, #8]
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	2103      	movs	r1, #3
 8000216:	69fa      	ldr	r2, [r7, #28]
 8000218:	fa01 f202 	lsl.w	r2, r1, r2
 800021c:	43d2      	mvns	r2, r2
 800021e:	401a      	ands	r2, r3
 8000220:	68bb      	ldr	r3, [r7, #8]
 8000222:	601a      	str	r2, [r3, #0]

    		*pGPIODMode |= (1 << i);
 8000224:	68bb      	ldr	r3, [r7, #8]
 8000226:	681b      	ldr	r3, [r3, #0]
 8000228:	2101      	movs	r1, #1
 800022a:	69fa      	ldr	r2, [r7, #28]
 800022c:	fa01 f202 	lsl.w	r2, r1, r2
 8000230:	431a      	orrs	r2, r3
 8000232:	68bb      	ldr	r3, [r7, #8]
 8000234:	601a      	str	r2, [r3, #0]

    		*pSet |= (1 << j);
 8000236:	687b      	ldr	r3, [r7, #4]
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	2101      	movs	r1, #1
 800023c:	69ba      	ldr	r2, [r7, #24]
 800023e:	fa01 f202 	lsl.w	r2, r1, r2
 8000242:	431a      	orrs	r2, r3
 8000244:	687b      	ldr	r3, [r7, #4]
 8000246:	601a      	str	r2, [r3, #0]

    		for(int k = 0; k < 100000; k++);
 8000248:	2300      	movs	r3, #0
 800024a:	617b      	str	r3, [r7, #20]
 800024c:	e002      	b.n	8000254 <main+0x6c>
 800024e:	697b      	ldr	r3, [r7, #20]
 8000250:	3301      	adds	r3, #1
 8000252:	617b      	str	r3, [r7, #20]
 8000254:	697b      	ldr	r3, [r7, #20]
 8000256:	4a13      	ldr	r2, [pc, #76]	; (80002a4 <main+0xbc>)
 8000258:	4293      	cmp	r3, r2
 800025a:	ddf8      	ble.n	800024e <main+0x66>

    		*pSet &= ~(1 << j);
 800025c:	687b      	ldr	r3, [r7, #4]
 800025e:	681b      	ldr	r3, [r3, #0]
 8000260:	2101      	movs	r1, #1
 8000262:	69ba      	ldr	r2, [r7, #24]
 8000264:	fa01 f202 	lsl.w	r2, r1, r2
 8000268:	43d2      	mvns	r2, r2
 800026a:	401a      	ands	r2, r3
 800026c:	687b      	ldr	r3, [r7, #4]
 800026e:	601a      	str	r2, [r3, #0]

    		for(int k = 0; k < 100000; k++);
 8000270:	2300      	movs	r3, #0
 8000272:	613b      	str	r3, [r7, #16]
 8000274:	e002      	b.n	800027c <main+0x94>
 8000276:	693b      	ldr	r3, [r7, #16]
 8000278:	3301      	adds	r3, #1
 800027a:	613b      	str	r3, [r7, #16]
 800027c:	693b      	ldr	r3, [r7, #16]
 800027e:	4a09      	ldr	r2, [pc, #36]	; (80002a4 <main+0xbc>)
 8000280:	4293      	cmp	r3, r2
 8000282:	ddf8      	ble.n	8000276 <main+0x8e>
    	for(uint32_t i = 24, j=12; i <= 30; i += 2, j++){
 8000284:	69fb      	ldr	r3, [r7, #28]
 8000286:	3302      	adds	r3, #2
 8000288:	61fb      	str	r3, [r7, #28]
 800028a:	69bb      	ldr	r3, [r7, #24]
 800028c:	3301      	adds	r3, #1
 800028e:	61bb      	str	r3, [r7, #24]
 8000290:	69fb      	ldr	r3, [r7, #28]
 8000292:	2b1e      	cmp	r3, #30
 8000294:	d9bc      	bls.n	8000210 <main+0x28>
 8000296:	e7b6      	b.n	8000206 <main+0x1e>
 8000298:	40023830 	.word	0x40023830
 800029c:	40020c00 	.word	0x40020c00
 80002a0:	40020c14 	.word	0x40020c14
 80002a4:	0001869f 	.word	0x0001869f

080002a8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002a8:	480d      	ldr	r0, [pc, #52]	; (80002e0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002aa:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002ac:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002b0:	480c      	ldr	r0, [pc, #48]	; (80002e4 <LoopForever+0x6>)
  ldr r1, =_edata
 80002b2:	490d      	ldr	r1, [pc, #52]	; (80002e8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002b4:	4a0d      	ldr	r2, [pc, #52]	; (80002ec <LoopForever+0xe>)
  movs r3, #0
 80002b6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002b8:	e002      	b.n	80002c0 <LoopCopyDataInit>

080002ba <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ba:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002bc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002be:	3304      	adds	r3, #4

080002c0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002c0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002c2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c4:	d3f9      	bcc.n	80002ba <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002c6:	4a0a      	ldr	r2, [pc, #40]	; (80002f0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002c8:	4c0a      	ldr	r4, [pc, #40]	; (80002f4 <LoopForever+0x16>)
  movs r3, #0
 80002ca:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002cc:	e001      	b.n	80002d2 <LoopFillZerobss>

080002ce <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ce:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002d0:	3204      	adds	r2, #4

080002d2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002d2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d4:	d3fb      	bcc.n	80002ce <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002d6:	f000 f811 	bl	80002fc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002da:	f7ff ff85 	bl	80001e8 <main>

080002de <LoopForever>:

LoopForever:
    b LoopForever
 80002de:	e7fe      	b.n	80002de <LoopForever>
  ldr   r0, =_estack
 80002e0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002ec:	08000364 	.word	0x08000364
  ldr r2, =_sbss
 80002f0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002f4:	2000001c 	.word	0x2000001c

080002f8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002f8:	e7fe      	b.n	80002f8 <ADC_IRQHandler>
	...

080002fc <__libc_init_array>:
 80002fc:	b570      	push	{r4, r5, r6, lr}
 80002fe:	4e0d      	ldr	r6, [pc, #52]	; (8000334 <__libc_init_array+0x38>)
 8000300:	4c0d      	ldr	r4, [pc, #52]	; (8000338 <__libc_init_array+0x3c>)
 8000302:	1ba4      	subs	r4, r4, r6
 8000304:	10a4      	asrs	r4, r4, #2
 8000306:	2500      	movs	r5, #0
 8000308:	42a5      	cmp	r5, r4
 800030a:	d109      	bne.n	8000320 <__libc_init_array+0x24>
 800030c:	4e0b      	ldr	r6, [pc, #44]	; (800033c <__libc_init_array+0x40>)
 800030e:	4c0c      	ldr	r4, [pc, #48]	; (8000340 <__libc_init_array+0x44>)
 8000310:	f000 f818 	bl	8000344 <_init>
 8000314:	1ba4      	subs	r4, r4, r6
 8000316:	10a4      	asrs	r4, r4, #2
 8000318:	2500      	movs	r5, #0
 800031a:	42a5      	cmp	r5, r4
 800031c:	d105      	bne.n	800032a <__libc_init_array+0x2e>
 800031e:	bd70      	pop	{r4, r5, r6, pc}
 8000320:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000324:	4798      	blx	r3
 8000326:	3501      	adds	r5, #1
 8000328:	e7ee      	b.n	8000308 <__libc_init_array+0xc>
 800032a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800032e:	4798      	blx	r3
 8000330:	3501      	adds	r5, #1
 8000332:	e7f2      	b.n	800031a <__libc_init_array+0x1e>
 8000334:	0800035c 	.word	0x0800035c
 8000338:	0800035c 	.word	0x0800035c
 800033c:	0800035c 	.word	0x0800035c
 8000340:	08000360 	.word	0x08000360

08000344 <_init>:
 8000344:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000346:	bf00      	nop
 8000348:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800034a:	bc08      	pop	{r3}
 800034c:	469e      	mov	lr, r3
 800034e:	4770      	bx	lr

08000350 <_fini>:
 8000350:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000352:	bf00      	nop
 8000354:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000356:	bc08      	pop	{r3}
 8000358:	469e      	mov	lr, r3
 800035a:	4770      	bx	lr
